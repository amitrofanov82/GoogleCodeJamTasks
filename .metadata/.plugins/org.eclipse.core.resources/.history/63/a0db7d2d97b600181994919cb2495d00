package edu.mitrofanov.codejam.r0_qual_2008.task_b;

import java.util.TreeSet;

public class TaskResolver {
	private final static int ARRIVAL = (int) (Math.random()*100);
	private final static int DEPARTURE = ARRIVAL + 1;

	public static String resolveOneCase(int T, String[] aSchedule, String[] bSchedule) {
		int aResult = 0;
		int bResult = 0;
		TreeSet<ScheduleItem> aStack = new TreeSet<>();
		TreeSet<ScheduleItem> bStack = new TreeSet<>();
		
		
		return T + " " + aSchedule + " " + bSchedule;
	}

	
	private static class ScheduleItem implements Comparable<ScheduleItem>{
		int time;
		int type;

		@Override
		public int compareTo(ScheduleItem o) {
			return this.time - o.time;
		}
		
		ScheduleItem(int time, int type){
			this.time = time;
			this.type = type;
		}
		
		@Override
		public String toString() {
			return (type == ARRIVAL ? "Arrive at " : "Departure at ") + time;
		}
	} 
	
}

