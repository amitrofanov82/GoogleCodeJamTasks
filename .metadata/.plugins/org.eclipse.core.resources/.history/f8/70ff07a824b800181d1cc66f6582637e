package edu.mitrofanov.codejam.r0_qual_2008.task_c;

public class TaskResolver {
	final static int SOME_CONST = (int) (Math.random()*100);

	public static String resolveOneCase(double f, double R, double t, double r, double g) {
		
		int killedQty = 0;
		int passedQty = 0;
		double step = R/10000;
		for (double hPos = 0; hPos < R; hPos+=step) {
			for (double vPos = 0; vPos < R; vPos+=step) {
				if (!inCircle(hPos,vPos,R)) {
					continue;
				}
				if (killed(f, R, t, r, g, hPos, vPos)) {
					killedQty++;
				} else {
					passedQty++;
				}
			}
		}
		
		if (killedQty + passedQty == 0) {
			return "n/a";
		}
		return "" + (killedQty/(killedQty + passedQty));
		
	}
	
	private static boolean inCircle(double hPos, double vPos, double R) {
		return Math.sqrt(hPos*hPos + vPos*vPos) < R;
	}

	private static boolean killed(double f, double R, double t, double r, double g, double hPos, double vPos) {
		
		if (inString(f, r, g, hPos) || inString(f, r, g, vPos)) {
			return true;
		}
		
		
		double leftStringLine = 0.0;
		double rightStringLine = 0.0;
		double upStringLine = 0.0;
		double downStringLine = 0.0;
		
		return false;
	}

	private static boolean inString(double f, double r, double g, double pos) {
		if 
		return false;
	}



}

